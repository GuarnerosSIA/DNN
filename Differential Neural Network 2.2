{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Differential Neural Network\n",
    "## Single Layer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Librerys\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "# Latex font\n",
    "from matplotlib import rc\n",
    "#It is no longer neccessary to resize the shapes 0f the matrices\n",
    "#Create the activation function for its use with different number of neurons\n",
    "\n",
    "rc('font',**{'family':'sans-serif','sans-serif':['Helvetica']})\n",
    "## for Palatino and other serif fonts use:\n",
    "#rc('font',**{'family':'serif','serif':['Palatino']})\n",
    "rc('text', usetex=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### The nonlinear system to be identified is given by\n",
    "\n",
    "$x_t = f(x_t,u_t,t)$\n",
    "\n",
    "$x_t \\in \\mathbb{R}^{n}; u_t \\in \\mathbb{R}^{q} ; q \\leq n$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### We assume the following parallel structure for neural networks\n",
    "\n",
    "$\\hat{x}_t = A\\hat{x}_t + W_1\\sigma(\\hat{x}_t) + W_2\\varphi(\\hat{x}_t)u_t$\n",
    "\n",
    "where:\n",
    "\n",
    "$\\hat{x}_t \\in \\mathbb{R}^{n}$ is the state of the neural network \n",
    "\n",
    "$u_t \\in \\mathbb{R}^{q}$ is an input measurable action\n",
    "\n",
    "$W_{1,t} \\in \\mathbb{R}^{n\\times k}$ is the matrix for non linear state feedback\n",
    "\n",
    "$W_{2,t} \\in \\mathbb{R}^{n\\times r}$ is the input matrix\n",
    "\n",
    "$A \\in \\mathbb{R}^{n \\times n } $ is a Hurwitz Matrix\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Activation Functions\n",
    "\n",
    "$\\sigma_i = a_i(1 + e^{-b_i x_t})^{-1}$\n",
    "\n",
    "$\\varphi_{i,j} = a_{i,j}(1 + e^{-b_{i,j} x_t})^{-1}$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0.04742587]\n",
      " [0.04742587]\n",
      " [0.04742587]\n",
      " [0.04742587]\n",
      " [0.04742587]]\n",
      "(5, 1)\n",
      "(3, 1)\n",
      "[[0.04742587]\n",
      " [0.09485175]\n",
      " [0.14227762]]\n",
      "[0.1423277  0.51593843]\n"
     ]
    }
   ],
   "source": [
    "#First we need to define the activation functions\n",
    "#This functions next will be custumized to have different vectors and parameters\n",
    "#The activation functions will convert from a vector field to antoher in the DNN\n",
    "def functionSigma(x,out):\n",
    "    s = np.zeros((out,1))\n",
    "    nin = np.shape(x)[0]\n",
    "    \n",
    "    for neuronsOut in range(out):\n",
    "        z = 0\n",
    "        for neuronsIn in range(nin):\n",
    "            z += x[neuronsIn]*(neuronsIn+1)\n",
    "        s[neuronsOut,0] = ((1/(1 + np.exp(z))))\n",
    "    return s\n",
    "\n",
    "def functionPhi(x,out,uSize):\n",
    "    s = np.zeros((out,1))#Variable para guardar resultados\n",
    "    nin = np.shape(x)[0]\n",
    "    \n",
    "    for neuronsOut in range(out):\n",
    "        z = 0\n",
    "        for neuronsIn in range(nin):\n",
    "            z += x[neuronsIn]*(neuronsIn+1)\n",
    "        s[neuronsOut,0] = ((1/(1 + np.exp(z))))*(neuronsOut+1)\n",
    "    s = s@np.ones((1,uSize))#Multiplicaci√≥n por una matriz\n",
    "    \n",
    "    return s\n",
    "\n",
    "\n",
    "X = np.ones((2,1))*1\n",
    "c = np.random.uniform(-1,1,2)\n",
    "y = functionSigma(X,5)\n",
    "print(y)\n",
    "print(np.shape(y))\n",
    "z = functionPhi(X,3,1)\n",
    "print(np.shape(z))\n",
    "print(z)        \n",
    "print(c)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Learning laws\n",
    "\n",
    "$\\dot{W}_i = K_1P\\Delta_t \\sigma(\\hat{x}_t)$\n",
    "\n",
    "$\\dot{W}_2 = K_2P\\Delta_t \\varphi(\\hat{x}_t)u_t$\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Then we need to define the learning laws of the DNN identifier\n",
    "\n",
    "def LAW1(W1_a,delta,k1,P,xh,dT, n):\n",
    "    W1 = dT*(k1@P@delta@functionSigma(xh,n).T) + W1_a\n",
    "    return W1\n",
    "\n",
    "def LAW2(W2_a,delta,k2,P,xh,u,dT, n1,n2):\n",
    "    W2 = dT*(k2@P@delta@functionPhi(xh,n1,n2).T*u) + W2_a\n",
    "    return W2\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To prove the behavior of the DNN let us introduce the Van Der Pol oscillator which is an unknown nonlinear system. The state equations that describes the system are the following:\n",
    "\n",
    "$\\dot{x}_1=x_2 \\\\\n",
    "\\dot{x}_2=-x_1+\\varepsilon x_2(1-x_1^2)+w(t)+u$\n",
    "\n",
    "The simulation will run 100 seconds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[-10   0]\n",
      " [  0 -10]]\n"
     ]
    }
   ],
   "source": [
    "# Simulation Time\n",
    "Tau = 10 #time in seconds\n",
    "dt = 0.001 # time step\n",
    "t = int(Tau/dt) # n time steps\n",
    "# Van der poll simulation parameters\n",
    "epsilon = 2;#The epsilon parameter\n",
    "u = 0.3;#External input\n",
    "# Initial conditions\n",
    "xs = np.zeros((2,t)) #Van Der Poll Oscillator\n",
    "# Diferential neural network parameters\n",
    "xh = np.zeros((2,t)) #DNN State\n",
    "# Matrix A\n",
    "A = np.array([[-1,0],\n",
    "              [0,-1]])*10\n",
    "# Number of neurons\n",
    "#This is for a future update of the activation functions\n",
    "nn1 = 1;\n",
    "nn2 = 1;\n",
    "# Weights \n",
    "W1 = np.zeros((2,nn1,t))\n",
    "W1[:,:,0] = np.random.random((2,nn1))*2-1#For first traning\n",
    "#W1[:,:,0] = W1[:,:,-1]#To save previus wieghts\n",
    "\n",
    "\n",
    "W2 = np.zeros((2,nn2,t))\n",
    "W2[:,:,0] = np.random.random((2,nn2))*2-1#For first training\n",
    "#W2[:,:,0] = W2[:,:,-1]\n",
    "# Identification error\n",
    "delta = np.zeros((2,t))\n",
    "#Training\n",
    "k1 = np.array([[5,0],\n",
    "              [0,1]])*10\n",
    "k2 = np.array([[5,0],\n",
    "              [0,5]])*10\n",
    "P = np.array([[50,0],\n",
    "              [0,50]])*2\n",
    "print(A)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#W1[:,:,0] = W1[:,:,-1]#To save previus wieghts\n",
    "#W2[:,:,0] = W2[:,:,-1]#To save previus wieghts\n",
    "xs = np.zeros((2,1,t))\n",
    "xh = np.zeros((2,1,t))\n",
    "Delta = np.zeros((2,1,t))\n",
    "for i in range(t-1):\n",
    "    xs[0,0,i+1] = (xs[1,0,i])*dt + xs[0,0,i]\n",
    "    xs[1,0,i+1] = (-xs[0,0,i] + epsilon*xs[1,0,i]*(1-xs[0,0,i]*xs[0,0,i]) + u)*dt + xs[1,0,i]\n",
    "    delta = xs[:,:,i]-xh[:,:,i]\n",
    "    Delta[:,:,i] = delta\n",
    "    W1[:,:,i+1] = LAW1(W1[:,:,i],delta,k1,P,xh[:,0,i],dt,nn1)\n",
    "    W2[:,:,i+1] = LAW2(W2[:,:,i],delta,k1,P,xh[:,0,i],u,dt,nn2,1)\n",
    "    X = dt*(A@xh[:,:,i] + W1[:,:,i]@functionSigma(xh[:,:,i],nn1) + W2[:,:,i]@functionPhi(xh[:,:,i],nn2,1)*u)\n",
    "    xh[:,:,i+1] = X + xh[:,:,i]\n",
    "    ## Loss\n",
    "# Plotting both states of the Van der pol oscilator\n",
    "fig = plt.figure(figsize = [15,8]);\n",
    "plt.subplot(211);\n",
    "plt.title('X 1')\n",
    "plt.plot(xh[0,0,:]);\n",
    "plt.plot(xs[0,0,:]);\n",
    "plt.subplot(212);\n",
    "plt.title('X 2')\n",
    "plt.plot(xh[1,0,:]);\n",
    "plt.plot(xs[1,0,:]);\n",
    "plt.savefig('Identificacion.png')\n",
    "#Plotting Error \n",
    "fig = plt.figure(figsize = [15,8]);\n",
    "plt.subplot(211);\n",
    "plt.title('X1 Error')\n",
    "plt.plot(Delta[0,0,:]);\n",
    "plt.subplot(212);\n",
    "plt.title('X2 Error')\n",
    "plt.plot(Delta[1,0,:]);\n",
    "plt.savefig('IdentificacionError.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-20-1d61a5825c4c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     55\u001b[0m         \u001b[0mW1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mLAW1\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mW1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdelta\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mk1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mP\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mxh\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mnn1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     56\u001b[0m         \u001b[0mW2\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mLAW2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mW2\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdelta\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mk1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mP\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mxh\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mu\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mnn2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 57\u001b[0;31m         \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdt\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mA\u001b[0m\u001b[0;34m@\u001b[0m\u001b[0mxh\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mW1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m@\u001b[0m\u001b[0mfunctionSigma\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mxh\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mnn1\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mW2\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m@\u001b[0m\u001b[0mfunctionPhi\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mxh\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mnn2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mu\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     58\u001b[0m         \u001b[0mxh\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mxh\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<ipython-input-16-a8c77fd0f2c5>\u001b[0m in \u001b[0;36mfunctionPhi\u001b[0;34m(x, out, uSize)\u001b[0m\n\u001b[1;32m     21\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mneuronsIn\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnin\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m             \u001b[0mz\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mneuronsIn\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mneuronsIn\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 23\u001b[0;31m         \u001b[0ms\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mneuronsOut\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexp\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mz\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mneuronsOut\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     24\u001b[0m     \u001b[0ms\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0ms\u001b[0m\u001b[0;34m@\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mones\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0muSize\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m#Multiplicaci√≥n por una matriz\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "#Measure the identification error\n",
    "\n",
    "NeuronTests = 50\n",
    "\n",
    "E = np.zeros((1,NeuronTests))\n",
    "\n",
    "for k in range(NeuronTests):\n",
    "    # Simulation Time\n",
    "    Tau = 10 #time in seconds\n",
    "    dt = 0.001 # time step\n",
    "    t = int(Tau/dt) # n time steps\n",
    "    # Van der poll simulation parameters\n",
    "    epsilon = 2;#The epsilon parameter\n",
    "    u = 0.3;#External input\n",
    "    # Initial conditions\n",
    "    xs = np.zeros((2,t)) #Van Der Poll Oscillator\n",
    "    # Diferential neural network parameters\n",
    "    xh = np.zeros((2,t)) #DNN State\n",
    "    # Matrix A\n",
    "    A = np.array([[-1,0],\n",
    "                  [0,-1]])*10\n",
    "    # Number of neurons\n",
    "    #This is for a future update of the activation functions\n",
    "    nn1 = NeuronTests;\n",
    "    nn2 = NeuronTests;\n",
    "    # Weights \n",
    "    W1 = np.zeros((2,nn1,t))\n",
    "    W1[:,:,0] = np.random.random((2,nn1))*2-1#For first traning\n",
    "    #W1[:,:,0] = W1[:,:,-1]#To save previus wieghts\n",
    "    \n",
    "    \n",
    "    W2 = np.zeros((2,nn2,t))\n",
    "    W2[:,:,0] = np.random.random((2,nn2))*2-1#For first training\n",
    "    #W2[:,:,0] = W2[:,:,-1]\n",
    "    # Identification error\n",
    "    delta = np.zeros((2,t))\n",
    "    #Training\n",
    "    k1 = np.array([[5,0],\n",
    "                  [0,1]])*10\n",
    "    k2 = np.array([[5,0],\n",
    "                  [0,5]])*10\n",
    "    P = np.array([[50,0],\n",
    "                  [0,50]])*2\n",
    "    \n",
    "    \n",
    "    xs = np.zeros((2,1,t))\n",
    "    xh = np.zeros((2,1,t))\n",
    "    Delta = np.zeros((2,1,t))\n",
    "    for i in range(t-1):\n",
    "        xs[0,0,i+1] = (xs[1,0,i])*dt + xs[0,0,i]\n",
    "        xs[1,0,i+1] = (-xs[0,0,i] + epsilon*xs[1,0,i]*(1-xs[0,0,i]*xs[0,0,i]) + u)*dt + xs[1,0,i]\n",
    "        delta = xs[:,:,i]-xh[:,:,i]\n",
    "        Delta[:,:,i] = delta\n",
    "        E[0,k] += delta[0]**2 + delta[1]**2\n",
    "        W1[:,:,i+1] = LAW1(W1[:,:,i],delta,k1,P,xh[:,0,i],dt,nn1)\n",
    "        W2[:,:,i+1] = LAW2(W2[:,:,i],delta,k1,P,xh[:,0,i],u,dt,nn2,1)\n",
    "        X = dt*(A@xh[:,:,i] + W1[:,:,i]@functionSigma(xh[:,:,i],nn1) + W2[:,:,i]@functionPhi(xh[:,:,i],nn2,1)*u)\n",
    "        xh[:,:,i+1] = X + xh[:,:,i]\n",
    "\n",
    "    \n",
    "\n",
    "fig = plt.figure(figsize = [15,8]);\n",
    "plt.title('Performance')\n",
    "plt.plot(E[0,:]);\n",
    "plt.savefig('Prueba Neuronas.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2, 50, 10000)"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
